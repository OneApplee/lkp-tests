#!/usr/bin/env ruby

LKP_SRC = ENV['LKP_SRC'] || File.dirname(File.dirname(File.dirname(File.realpath($PROGRAM_NAME))))

require "#{LKP_SRC}/lib/string"
require "#{LKP_SRC}/lib/tests/stats"

stats = LKP::Stats.new

while (line = $stdin.gets)
  line = line.resolve_invalid_bytes

  case line
  when /(32|64)\):\s+(PASS|FAIL|SKIPPED)/
    test = "#{$1}bit.#{line.split('(')[0].rstrip.tr('[ .]', '_')}".downcase

    stats.add test, $2.tr(' ', '_').downcase, overwrite: true
  when /(32|64)\):\s+Bad/
    test = "#{$1}bit.#{line.split('(')[0].rstrip.tr('[ .]', '_')}".downcase

    stats.add test, 'bad_configuration'
  when /(32|64)\):\s+/
    test = "#{$1}bit.#{line.split('(')[0].rstrip.tr('[ .]', '_')}".downcase

    stats.add test, 'killed_by_signal'
  end
end

stats.dump('skipped' => 'skip')
